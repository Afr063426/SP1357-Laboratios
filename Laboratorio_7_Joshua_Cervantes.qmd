---
title: Laboratorio 7, Tópicos en análisis datos 1
author: Joshua Isaac Cervantes Artavia
date: today
format: 
    pdf:
        tbl-pos: 'H'
        fig-pos: 'H'
        number-sections: true
        colorlinks: true
        fontfamily: libertinus

---

```{r}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)




tryCatch(
    {
        # Directorio donde se ubica el qmd
        directory <- dirname(rstudioapi::getSourceEditorContext()$path)
        setwd(directory) # Establecer el directorio del archivo como la raiz
    },
    error = function(e) {
        message("")
        print("")
    }
)
```

1.
```{r}
# Se cargan datos y se omiten los na
data(iris)
names(iris)
X <- na.omit(iris[, 1:4])
head(X)
```

2.
```{r}
# Se estima la distancia Euclidea
d <- dist(X, method = "euclidean")
head(d)
```

3. **Clasificación jerárquica ascendente**

```{r}
# Se realiza una clasificacion jerarquica
(clasif <- hclust(d, method = "complete"))
```

4.
```{r}
# Se grafica la clasificacion jerarquica
plot(clasif)

# Se corta el arbol
(corte <- cutree(clasif, k = 3))

# Se grafica el arbol con el corte
plot(clasif, label = FALSE)
rect.hclust(clasif, k = 3, border = "red")
```

5.
```{r}
# Se proceden a hacer los mismo arboles
# pero con distintas distancias
d_L2 <- dist(X, method = "euclidean")
d_L1 <- dist(X, method = "manhattan")
d_max <- dist(X, method = "maximum")
d_canb <- dist(X, method = "canberra")

# Se realizan la clasificaciones
fn_hclust <- function(distance, method = "average", cut_tree = 3) {
    clasif <- hclust(distance, method)
    plot(clasif, labels = FALSE)
    rect.hclust(clasif, k = cut_tree, border = "red")
}
fn_hclust(d_L2)

fn_hclust(d_L1)

fn_hclust(d_max)

fn_hclust(d_canb)
```

Se puede observar como al cambiar las distancias se cambian las formas de los árboles.

6. 
```{r}
# Se cargan los datos de los carros
data(mtcars)
names(mtcars)
(clasif_carros <- hclust(dist(mtcars), method = "average"))
(corte <- cutree(clasif_carros, k = 3))

plot(clasif_carros)
rect.hclust(clasif_carros, k = 3, border = "red")
```

7. 

a-
```{r}
# Se muestra el grafico del dendograma
# de los carros
clasif <- hclust(dist(mtcars))
plot(clasif)
```

b-
```{r}
# Se muestran las etiquetas todas la misma altura
plot(clasif, hang = -1)
```

c- 
```{r}
# Se crea un objeto dendograma
arbol <- as.dendrogram(clasif)

# Se grafica
plot(arbol)

```

d- 
```{r}
# Grafico en forma triangular
plot(arbol, type = "triangle")
```

e- 
```{r}
# Dendograma cortado en la parte superior
op <- par(mfrow = c(2, 1))
plot(cut(arbol, h = 75)$upper, main = "Parte superior cortando en h = 75")

plot(cut(arbol, h = 75)$lower[[2]], main = "Parte inferio cortando en h = 75")
```

f-
```{r}
# Grafico con colores
labelColors <- c("#CDB380", "#036564", "#EB6841", "#EDC951")

# Se corta el dendograma en 4 clases
clusMember <- cutree(clasif, 4)

# Funcion para obtener las etiquetas de los colores
colLab <- function(n) {
    if (is.leaf(n)) {
        a <- attributes(n)
        labCol <- labelColors[clusMember[which(names(clusMember) == a$label)]]
        attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
    }
    n
}

clustDendro <- dendrapply(arbol, colLab)
plot(clustDendro, main = "Dendograma Bonito", type = "triangle")
```

g- 
```{r}
# Manejo de algunos parametros
op <- par(bg = "#DDE3CA")
plot(clasif,
    col = "#487AA1", col.main = "#45ADA8", col.lab = "#7C8071",
    col.axis = "#F38630", lwd = 3, lty = 3, sub = "", hang = -1, axes = FALSE
)


# Annadir ejes h-
axis(
    side = 2, at = seq(0, 400, 100), col = "#F38630", labels = FALSE,
    lwd = 2
)

# Annadir texto al margen -i
mtext(seq(0, 400, 100),
    side = 2, at = seq(0, 400, 100), line = 1,
    col = "#A38630", las = 2
)
```

j- 
```{r}
# Convertir el arbol a horizontal
# intall paquete
library(ape)
```

k-
```{r}
# Grafico horizontal
plot(as.phylo(clasif), cex = 0.9, label.offset = 1)
```

l-
```{r}
# cladogram
plot(as.phylo(clasif), type = "cladogram", cex = 0.9, label.offset = 1)

# Sin raiz
plot(as.phylo(clasif), type = "unrooted")

# Fan aspas
plot(as.phylo(clasif), type = "fan")

# radial
plot(as.phylo(clasif), type = "radial")
```

m-
```{r}
# Annadir colores al azar
plot(as.phylo(clasif),
    type = "fan", tip.color = hsv(runif(
        15, 0.65,
        0.95
    ), 1, 1, 0.7), edge.color = hsv(runif(10, 0.65, 0.75), 1, 1, 0.7),
    edge.width = runif(20, 0.5, 3), use.edge.length = TRUE, col = "gray80"
)

# Definir vector de colores y cortar dendagrama en 5 y hacer que el tamanho refleje las millas por galon
mypal <- c("#556270", "#4ECDC4", "#1B676B", "#FF6B6B", "#C44D58")
clus5 <- cutree(clasif, 5)
op <- par(bg = "#E8DDCB")
plot(as.phylo(clasif),
    type = "fan", tip.color = mypal[clus5], label.offset = 1,
    cex = log(mtcars$mpg, 10), col = "red"
)
```

n- 

i.
```{r}
# Paquete sparcl
# Se debe instalar el mismo
# install.packages("sparcl")
library(sparcl)
# Colores de las hojas del arbol
y <- cutree(clasif, 3)

# colorear
ColorDendrogram(clasif,
    y = y, labels = names(y), main = "Datos de Carros",
    branchlength = 80
)
```

ii.
```{r}
# Paquete ggdendro
# install.packages("ggdendro")
library(ggdendro)

# Se grafica el dendograma
ggdendrogram(clasif)

# Se rota
ggdendrogram(clasif, rotate = TRUE, size = 4, theme_dendro = FALSE, color = "red")
```

iii.
```{r}
# Lineas triangulares del paquete ggplot2
# install.packages("ggplot2")
library(ggplot2)
ddata <- dendro_data(as.dendrogram(clasif), type = "triangle")
ggplot(segment(ddata)) +
    geom_segment(aes(
        x = x, y = y, xend = xend,
        yend = yend
    )) +
    ylim(-10, 150) +
    geom_text(data = label(ddata), aes(
        x = x,
        y = y, label = label
    ), angle = 90, lineheight = 0)
```

iv. 
```{r}
# Dendograma de Romain Francois
source("http://addictedtor.free.fr/packages/A2R/lastVersion/R/code.R")

# Dendograma coloreado
op <- par(bg = "#EFEFEF")
A2Rplot(clasif, k = 3, boxes = FALSE, col.up = "gray50", col.down = c(
    "#FF6B6B",
    "#4ECDC4", "#556270"
))
par(op)

# Otro dendograma coloreado con el fondo negro
op <- par(bg = "gray15")
cols <- hsv(c(0.2, 0.57, 0.95), 1, 1, 0.8)
A2Rplot(clasif, k = 3, boxes = FALSE, col.up = "gray50", col.down = cols)
```